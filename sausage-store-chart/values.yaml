global:
  imagePullPolicy: Always
  vault:
    name: vault-secret
    host: "vault-host"
    
backend:
  image: mityay36/sausage-backend:latest
  replicas: 2
  containerPort: 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi" 
      cpu: "500m"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  vpa:
    updatePolicy:
      updateMode: "Off"
    resourcePolicy:
      containerPolicies:
      - containerName: backend
        maxAllowed:
          cpu: 1
          memory: 2Gi
        minAllowed:
          cpu: 100m
          memory: 256Mi
  env:
    postgresUri: "jdbc:postgresql://postgresql:5432/sausage-store"
    postgresUser: "store"
    postgresPassword: "storepassword"
    reportPath: "/logs/reports"
    logPath: "/logs"
  service:
    port: 8080
  annotations:
    path: "/actuator/prometheus"
    port: "8080"
    scrape: "true"


backend-report:
  image: mityay36/sausage-backend-report:latest
  replicas: 1
  containerPort: 8080
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  strategy:
    type: Recreate
  hpa:
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
  env:
    port: "8080"
    db: "mongodb://admin:password@mongodb:27017/sausage-store"

frontend:
  image: mityay36/sausage-frontend:latest
  replicas: 2
  containerPort: 80
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "50m"
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  nginxConf: "nginx.conf"
  service:
    port: 80
  ingress:
    host: "front-dpokrovskiy.2sem.students-projects.ru"
    path: "/"
    pathType: "Prefix"



environment: "production"
