---
# Source: sausage-store/charts/backend-report/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sausage-store-backend-report-conf
data:
  port: 8080
  db: mongodb://reports:reportspassword@mongodb:27017/sausage-store
---
# Source: sausage-store/charts/backend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sausage-store-backend-conf
data:
  postgres_uri: jdbc:postgresql://postgresql:5432/sausage-store
  postgres_user: store
  postgres_password: storepassword
  report_path: /logs/reports
  log_path: /logs
---
# Source: sausage-store/charts/frontend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sausage-store-frontend-conf
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;
        server {

          listen       80;

          location / {
              root   /usr/share/nginx/html;
              index  index.html;
              try_files $uri $uri/ /index.html;
          }

            location /api {
              proxy_pass http://sausage-store-backend-service:8080;
          }

          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
              root   /usr/share/nginx/html;
          }
      }

    }
---
# Source: sausage-store/charts/infra/templates/mongodb/mongodb.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-conf
data:
  MONGO_INITDB_ROOT_USERNAME: admin
  MONGO_INITDB_ROOT_PASSWORD: password
---
# Source: sausage-store/charts/infra/templates/postgresql/postgresql.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-conf
data:
  POSTGRES_DB: sausage-store
  POSTGRES_USER: store
  POSTGRES_PASSWORD: storepassword
  PGDATA: /var/lib/postgresql/data/pgdata
---
# Source: sausage-store/charts/backend-report/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sausage-store-backend-report-service
  labels:
    app: sausage-store-backend-report-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: sausage-store-backend-report
---
# Source: sausage-store/charts/backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sausage-store-backend-service
  labels:
    app: sausage-store-backend-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: sausage-store-backend
---
# Source: sausage-store/charts/frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sausage-store-frontend-service
  labels:
    app: sausage-store-frontend-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: sausage-store-frontend
---
# Source: sausage-store/charts/infra/templates/mongodb/mongodb.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb
  clusterIP: None
---
# Source: sausage-store/charts/infra/templates/postgresql/postgresql.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresql
  clusterIP: None
---
# Source: sausage-store/charts/backend-report/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sausage-store-backend-report
  namespace: default
  labels:
    app.kubernetes.io/name: backend-report
    app.kubernetes.io/instance: "sausage-store"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "backend-report-0.1.0"
    app.kubernetes.io/component: backend-report
    app.kubernetes.io/part-of: sausage-store
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sausage-store-backend-report
  template:
    metadata:
      labels:
        app: sausage-store-backend-report
    spec:
      containers:
        - name: backend-report
          image: mityay36/sausage-backend-report:latest
          imagePullPolicy: Always
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-report-conf
                  key: port
            - name: DB
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-report-conf
                  key: db
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          ports:
            - name: backend-report
              containerPort: 8080
      volumes:
      - name: sausage-store-backend-report-conf
        configMap:
          name: sausage-store-backend-report-conf
          items:
            - key: db
              path: db
            - key: port
              path: port
---
# Source: sausage-store/charts/backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sausage-store-backend
  namespace: default
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: "sausage-store"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "backend-0.1.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
spec:
  revisionHistoryLimit: 
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate 
  selector:
    matchLabels:
      app: sausage-store-backend
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: sausage-store-backend
    spec:
      containers:
        - name: backend
          image: mityay36/sausage-backend:latest
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-conf
                  key: postgres_uri
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-conf
                  key: postgres_user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-conf
                  key: postgres_password
            - name: REPORT_PATH
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-conf
                  key: report_path
            - name: LOG_PATH
              valueFrom:
                configMapKeyRef:
                  name: sausage-store-backend-conf
                  key: log_path
          resources:
            limits:
              cpu: 150m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi 
          ports:
            - name: backend
              containerPort: 8080
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10 
      volumes:
      - name: sausage-store-backend-conf
        configMap:
          name: sausage-store-backend-conf
          items:
            - key: postgres_uri
              path: postgres_uri
            - key: postgres_user
              path: postgres_user
            - key: postgres_password
              path: postgres_password
            - key: report_path
              path: report_path
            - key: log_path
              path: log_path
---
# Source: sausage-store/charts/frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sausage-store-frontend
  namespace: default
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: "sausage-store"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "frontend-0.1.0"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: sausage-store
spec:
  revisionHistoryLimit: 3
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sausage-store-frontend
  template:
    metadata:
      labels:
        app: sausage-store-frontend
    spec:
      containers:
        - name: frontend
          image: mityay36/sausage-frontend:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi 
          ports:
            - name: frontend
              containerPort: 80
          volumeMounts:
          - name: sausage-store-frontend-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
      volumes:
        - name: sausage-store-frontend-conf
          configMap:
            name: sausage-store-frontend-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
# Source: sausage-store/charts/backend-report/templates/deployment.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sausage-store-backend-report-hpa
  labels:
    app: sausage-store-backend-report-hpa
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: sausage-store
    meta.helm.sh/release-namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sausage-store-backend-report
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
---
# Source: sausage-store/charts/infra/templates/mongodb/mongodb.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  annotations:
    helm.sh/hook-weight: "-5"
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        envFrom:
          - configMapRef:
              name: mongodb-conf
        ports:
        - containerPort: 27017
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
# Source: sausage-store/charts/infra/templates/postgresql/postgresql.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  annotations:
    helm.sh/hook-weight: "-10"
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:13
          envFrom:
            - configMapRef:
                name: postgresql-conf
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: 32Mi
              cpu: 50m
            limits:
              memory: 64Mi
              cpu: 100m
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U store -d sausage-store
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U store -d sausage-store
            initialDelaySeconds: 45
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
---
# Source: sausage-store/charts/frontend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sausage-store-frontend-ingress
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - front-dpokrovskiy.2sem.students-projects.ru
    secretName: 2sem-students-projects-wildcard-secret
  rules:
  - host: front-dpokrovskiy.2sem.students-projects.ru
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sausage-store-frontend-service
            port:
              number: 80
---
# Source: sausage-store/charts/backend/templates/deployment.yaml
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: sausage-store-backend-vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sausage-store-backend
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: backend
      maxAllowed:
        cpu: 1
        memory: 2Gi
      minAllowed:
        cpu: 100m
        memory: 256Mi
---
# Source: sausage-store/charts/infra/templates/mongodb/mongodb-init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: mongodb-init
        image: mongo:7.0
        command:
        - /bin/bash
        - -c
        - |
          # Ждем пока MongoDB станет доступен
          until mongo --host mongodb --eval "print(\"waited for connection\")"
          do
            echo "Waiting for MongoDB..."
            sleep 2
          done
          
          # Создаем пользователя reports
          mongo mongodb://admin:password@mongodb:27017/admin <<EOF
          use sausage-store
          db.createUser({
            user: "reports",
            pwd: "reportspassword", 
            roles: [
              { role: "readWrite", db: "sausage-store" }
            ]
          })
          EOF
